{"version":3,"sources":["utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","utils/mutations.js","components/CommentList/index.js","components/CommentForm/index.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/About.js","pages/Gallery.js","components/AppointmentList/index.js","pages/Appointments.js","App.js","serviceWorker.js","index.js","assets/spinner.gif"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","LOGIN","ADD_ORDER","ADD_USER","ADD_APPOINTMENT","ADD_COMMENT","REMOVE_COMMENT","CommentList","comments","productId","useMutation","removeComment","handleFormSubmit","event","preventDefault","commentId","comment","commentBody","CommentForm","useState","setBody","characterCount","setCharacterCount","addComment","error","onSubmit","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","Login","email","password","formState","setFormState","login","mutationResponse","handleChange","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","About","width","Gallery","AppointmentList","startTime","appointmentType","verifyAppointment","localizer","momentLocalizer","moment","myEventsList","title","start","end","MyCalendar","newEvent","setNewEvent","allEvents","setAllEvents","for","defaultvalue","placeholderText","marginRight","selected","marginTop","events","startAccessor","endAccessor","add","_d","margin","defaultView","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","Appointments","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.c2872f8b.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('SalonMe', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img className=\"dragon\"\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n      comments {\n        _id\n        createdAt\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n      comments {\n        _id\n        createdAt\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n\nexport const QUERY_APPOINTMENTS = gql`\nquery appointments($user_id: ID!) {\n  appointments(user_id: $user_id) {\n    service\n    startTime\n    user_id\n  }\n}\n`;","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <div className=\"products\">\n        <h2>Our Products:</h2>\n      </div>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div className=\"category-menu\">\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>Close X</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>Log in to check out</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_APPOINTMENT = gql`\nmutation addAppointment(\n  $service: String!\n  $startTime: String!\n  $user_id: String!\n) {\n  addAppointment(\n    service: $service\n    startTime: $startTime\n    user_id: $user_id\n  ) {\n    service\n    startTime\n    user_id\n  }\n}\n`;\nexport const ADD_COMMENT = gql`\n  mutation addComment($productId: ID!, $commentBody: String!) {\n    addComment(productId: $productId, commentBody: $commentBody) {\n      _id\n      commentBody\n      \n    }\n  }\n`;\n\nexport const REMOVE_COMMENT = gql`\n  mutation removeComment($productId: ID!, $commentId: ID!) {\n    removeComment(productId: $productId, commentId: $commentId) {\n      _id\n      commentBody\n    }\n  }\n`;","import { useMutation } from '@apollo/react-hooks';\nimport React from 'react';\nimport { REMOVE_COMMENT } from '../../utils/mutations';\n\n\n\nconst CommentList = ({ comments, productId }) => {\n\n    const [removeComment] = useMutation(REMOVE_COMMENT);\n\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        let commentId = event.target.value;\n\n        try {\n            // add comment to database\n            await removeComment({\n                variables: { productId, commentId }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-header\">\n               <span className=\"text-light\">Reviews</span> \n            </div>\n            <div className=\"card-body\">\n                {comments &&\n                    comments.map(comment => (\n                        <form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                         key={comment._id}>\n                            <p className=\"pill mb-3\" >\n                            {comment.commentBody}\n                            </p>\n                            <button value={comment._id} onClick={handleFormSubmit} className=\"btn col-12 col-md-3\" type=\"submit\">\n                            Delete\n                            </button>\n                            \n                        </form>\n                    ))}\n            </div>\n        </div>\n    );\n};\n\nexport default CommentList;","import { useMutation } from '@apollo/react-hooks';\nimport React, { useState } from 'react';\nimport { ADD_COMMENT } from '../../utils/mutations';\nimport './index.css';\n\n\nconst CommentForm = ({ productId }) => {\n\n    const [commentBody, setBody] = useState('');\n    const [characterCount, setCharacterCount] = useState(0);\n\n    const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n    const handleChange = event => {\n        if (event.target.value.length <= 280) {\n            setBody(event.target.value);\n            setCharacterCount(event.target.value.length);\n        }\n    }\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        console.log(event);\n\n        try {\n            // add comment to database\n            await addComment({\n                variables: { commentBody, productId }\n            });\n            setBody('');\n            setCharacterCount(0);\n        } catch (e) {\n            console.log(e);\n        }\n\n        \n    }\n\n    return (\n        <div>\n            <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\n                Character Count: {characterCount}/280\n                {error && <span className=\"ml-2\">Something went wrong...</span>}\n            </p>\n            <form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleFormSubmit}\n            >\n                <textarea\n                    placeholder=\"Leave a review for this product...\"\n                    value={commentBody}\n                    className=\"form-input col-12 col-md-9 white\"\n                    onChange={handleChange}\n                ></textarea>\n                <button className=\"btn col-12 col-md-3\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default CommentForm;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button\n              disabled={!cart.find(p => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n\n          <div>\n            <CommentForm productId={currentProduct._id} />\n            <CommentList comments={currentProduct.comments} productId={currentProduct._id} />\n          </div>\n        </div>\n        \n        \n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1 login\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form className=\"login-form\" onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1 signup\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Sign Up:</h2>\n      <form className=\"signup-form\" onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/about\">\n              About\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/appointments\">\n              Appointments\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/gallery\">\n              Gallery \n            </Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/about\">\n              About\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/appointments\">\n              Appointments\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/gallery\">\n              Gallery \n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <div className=\"header\">\n        <h1>\n          <Link to=\"/\">\n            SalonMe\n          </Link>\n        </h1>\n      </div>\n      <div className=\"nav\">\n        <nav>\n        {showNavigation()}\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n      \n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n    \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n        \n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the home page\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React from \"react\";\n\n\n\nconst About = () => {\n    return (\n      <div className=\"container\">\n        \n        <h2 className=\"about-title\">About Us</h2>\n        <p className=\"about\">We are a real salon that exists. We do lots of cool stuff to people's hair that looks good.</p>\n        \n        <h3 className=\"stylist-title\">Meet our Stylists:</h3>\n      \n        <div className=\"column\">\n          <div className=\"stylist\">\n            <h1 className=\"stylist-name\">Jolisna Yuhashi</h1>\n            <img src=\"/images/jolisna.jpg\" alt=\"Jolisna Yuhashi\" width=\"500\" height=\"600\"></img>\n            <p>Jolisna is one of our best hair stylists, who specializes in styling hair. She holds a degree from Southeastern North Dakota Community Beauty College where she graduated top of her class and patented her famousand popular \"Flock of Golden Eagles\" hairstyle.\n              She also enjoys going on walks with her dog, Chinese food, and plotting world domination with her spouse and children.\n            </p>\n          </div>\n        </div>\n\n\n        <div className=\"column\">\n          <div className=\"stylist\">\n            <h1 className=\"stylist-name\">Kylie Roesbery</h1>\n            <img src=\"/images/kylie.jpg\" alt=\"Kylie Roesbery\" width=\"500\" height=\"600\"></img>\n            <p>Before working at SalonMe, Kylie worked as a stylist on various movie sets, most notably Star Wars, Top Gun, October Sky, Interstellar, and even had a cameo in Boogie Nights. She has also worked as a stylist for various\n              U.S. Presidents. She decided to step down from these more prominent roles because she thinks this salon and everyone else who works there is so awesome. The stocked fridge full of salami was also difficult to turn down.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"stylist\">\n            <h1 className=\"stylist-name\">Mary Doutis</h1>\n            <img src=\"/images/mary.jpg\" alt=\"Mary Doutis\" width=\"500\" height=\"600\"></img>\n            <p>When Mary isn't working hard in the salon, she can be found at home writing. She has published several books, such as \"Hairstyling for Dummies,\" \"Particle Physics for Dummies,\" \"How to Successfully Pull Off the Shoelace-Tying Prank Without Being Noticed,\"\n              and she is currently working on a spinoff series loosely based on Frank Herbert's \"Dune.\" She excels at hair color, and encourages everyone to dye their hair purple, her favorite color.\n            </p>\n          </div>\n        </div>\n    </div>\n  );\n};\n\n\n\n\nexport default About;\n\n","import React from \"react\";\n\n\nconst Gallery = () => {\n    return (\n      <div className=\"container gallery\">\n        \n        <h2 className=\"gallery-title\">Check out some of the work we've done!</h2>\n        \n        <img src=\"/images/color-image1.jpg\" alt=\"red color\" width=\"500\" height=\"600\"></img>\n        <img src=\"/images/color-image2.jpg\" alt=\"red color 2\" width=\"500\" height=\"600\" ></img>\n        <img src=\"/images/color-image3.jpg\" alt=\"kid cut and style\" width=\"500\" height=\"600\"></img>\n        <img src=\"/images/color-image4.jpg\" alt=\"Ombre\" width=\"500\" height=\"600\"></img>\n        <img src=\"/images/color-image5.jpg\" alt=\"green and blue\" width=\"500\" height=\"600\"></img>\n        <img src=\"/images/color-image6.jpg\" alt=\"pink orange and purple\" width=\"500\" height=\"600\"></img>\n        \n      </div>\n    );\n  };\n\n\n\n\nexport default Gallery;","import React from 'react';\n\n\nconst AppointmentList = ({ startTime, appointmentType, verifyAppointment }) => {\n\n\n    return (\n        <div>\n            <h5>\n                Your appointments:\n            </h5>\n            \n        </div>\n    );\n};\n\nexport default AppointmentList;","import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport DateTimePicker from 'react-datetime-picker';\nimport \"react-datetime-picker/dist/DateTimePicker.css\";\nimport AppointmentList from '../components/AppointmentList';\nimport { ADD_APPOINTMENT } from '../utils/mutations';\n//import { useMutation } from '@apollo/client';\n// import { QUERY_USER, QUERY_APPOINTMENTS } from \"../utils/queries\";\n\n\nconst localizer = momentLocalizer(moment);\n\nconst myEventsList = [\n    {\n        title: \"Haircut\",\n        start: new Date(2021, 10, 15, 9, 0, 0),\n        end: new Date(2021, 10, 15, 9, 0, 0)\n    }\n];\n\nfunction MyCalendar() {\n  const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n  const [allEvents, setAllEvents] = useState(myEventsList)\n\n  //const [createAppointment] = useMutation(ADD_APPOINTMENT);\n\n  let verifyAppointment = false;\n\n  function handleAddEvent() {\n    if(newEvent) {\n      verifyAppointment = true;\n      try{\n        ADD_APPOINTMENT ({\n        variables: { \n          title: newEvent.title,\n          startTime: newEvent.start,\n        }\n      })\n      } catch (e) {\n        console.log(e);\n      }\n      \n      setAllEvents([...allEvents, newEvent])\n    }  \n  }\n\n\n  return (\n    <div >\n      <h2 className=\"appointment-scheduler\">Schedule an Appointment</h2>\n      <div className=\"appointment-scheduler\">\n        \n        <form action=\"/action_page.php\">\n          <label for=\"salon\">Choose a service:</label>\n          <div>\n            <select defaultvalue={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}>\n              <option value=\"\">Cuts</option>\n              <option value=\"Men's\">Men's $20</option>\n              <option value=\"Women's Short\">Women's Short $30</option>\n              <option value=\"Women's Long\">Women's Long $35</option>\n              <option value=\"Blow Out\">Blow Out $25</option>\n              <option value=\"Kids\">Kids $20</option>\n            </select>\n          </div>\n          <div>\n            <select defaultvalue={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}>\n              <option value=\"\">Colors</option>\n              <option value=\"Partial Highlight\">Partial Highlight $70</option>\n              <option value=\"Root Re-Touch\">Root Re-Touch $70</option>\n              <option value=\"All Over\">All Over From $80 and Up</option>\n              <option value=\"Balyage\">Balyage from $100 and Up</option>\n              <option value=\"Highlights\">Highlights $120</option>\n              <option value=\"Additional Color\">Additional Color $10 Each</option>\n              <option value=\"Color Correction\">Color Correction Starts at $100</option>\n            </select>\n          </div>\n          <div>\n            <select defaultvalue={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}>\n              <option value=\"\">Facial Wax</option>\n              <option value=\"EyeBrows\">EyeBrows $12</option>\n              <option value=\"Lip\">Lip $12</option>\n            </select>\n          </div>\n        </form>\n        <DateTimePicker\n          placeholderText=\"Start Date\"\n          style={{ marginRight: \"10px\" }}\n          selected={newEvent.start}\n          onChange={(start) => setNewEvent({ ...newEvent, start })}\n          value={newEvent.start}\n          className=\"date-time-picker\"\n        />\n        \n        <button className=\"schedule-btn\" style={{ marginTop: \"10px\" }} onClick={handleAddEvent}>\n          Schedule\n        </button>\n      </div>\n      <div>\n          <AppointmentList \n            startTime={newEvent.start}\n            appointmentType={newEvent.title}\n            verifyAppointment={verifyAppointment.value}\n          />\n      </div>\n      \n      <Calendar\n        localizer={localizer}\n        events={allEvents}\n        startAccessor=\"start\"\n        endAccessor={(newEvent) => { \n          const end = moment(newEvent.start).add(1, 'h')\n          return end._d\n         }}\n        style={{ height: 500, margin: \"50px\" }}\n        defaultView=\"week\"\n        className=\"calendar\"\n      />\n    </div>\n  )\n}\n\nexport default MyCalendar;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport About from \"./pages/About\";\n// import Pricing from \"./pages/Pricing\";\nimport Gallery from \"./pages/Gallery\";\nimport Appointments from \"./pages/Appointments\";\n\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/About\" component={About} />\n              <Route exact path=\"/Appointments\" component={Appointments} />\n              <Route exact path=\"/Gallery\" component={Gallery} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";"],"sourceRoot":""}